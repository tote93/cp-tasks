{"version":3,"sources":["components/ToDo/Todo.js","components/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","setList","deleteOnList","index","edit","useState","todoItem","setTodoItem","deleteFlag","setDeleteFlag","onEdit","setOnEdit","useEffect","className","htmlFor","title","type","onChange","obj","checked","handleClickCheck","value","onFocus","onKeyDown","e","key","target","handleKeyDown","newItem","JSON","parse","stringify","onChangeEdit","onClick","setTimeout","Card","info","deleteCard","inputValue","setInputValue","items","todoList","setTodoList","handleStatusChange","i","list","exportDataToStorage","handleDelete","filter","_","data","jsonStorage","localStorage","getItem","setItem","handleEdit","newInfo","map","item","cardTitle","FormControl","InputLabel","Input","autoComplete","autoFocus","inputProps","maxLength","localList","length","endAdornment","InputAdornment","position","IconButton","addToDo","Button","fullWidth","variant","color","startIcon","App","open","setopen","listName","setListName","cardList","setCardList","handleClose","cards","card","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","margin","label","DialogActions","disabled","localCard","createNewList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08745413.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport \"./Todo.css\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nfunction Todo({ todo, setList, deleteOnList, index, edit }) {\n  const [todoItem, setTodoItem] = useState(todo);\n  const [deleteFlag, setDeleteFlag] = useState(false);\n  const [onEdit, setOnEdit] = useState(false);\n\n  const handleClickCheck = () => {\n    let obj = todoItem;\n    obj = { ...obj, checked: !todoItem.checked };\n    setList(obj, index);\n  };\n\n  const handleClickDelete = () => {\n    setDeleteFlag(!deleteFlag);\n    setTimeout(() => {\n      deleteOnList(index);\n    }, 200);\n  };\n\n  useEffect(() => {\n    setTodoItem(todo);\n  }, [todo]);\n\n  const onChangeEdit = (e) => {\n    if (e.target.value !== \"\") {\n      const newItem = JSON.parse(JSON.stringify(todoItem));\n      newItem.title = e.target.value;\n      setTodoItem(newItem);\n    }\n  };\n  const handleClickEdit = () => {\n    edit(todoItem, index);\n    setOnEdit(false);\n  };\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && e.target.value !== \"\") {\n      edit(todoItem, index);\n      setOnEdit(false);\n    }\n  };\n  return (\n    <li className={deleteFlag ? \"todo todo__deleteTask\" : \"todo\"}>\n      <label className=\"todo__label\" htmlFor={todo.title}>\n        <input\n          className=\"todo__input\"\n          type=\"checkbox\"\n          onChange={() => handleClickCheck()}\n          checked={todo.checked ? true : false}\n        />\n        <span className=\"check\"></span>\n        <input\n          type=\"text\"\n          className={todo.checked ? \"todo__edit checked\" : \"todo__edit\"}\n          value={todoItem.title}\n          onFocus={() => setOnEdit(true)}\n          onKeyDown={(e) => handleKeyDown(e)}\n          onChange={(e) => onChangeEdit(e)}\n        />\n      </label>\n      {onEdit ? (\n        <CheckIcon\n          className=\"todoIcon todoIcon--confirm\"\n          onClick={() => handleClickEdit()}\n        />\n      ) : (\n        <DeleteForeverIcon\n          className=\"todoIcon todoIcon--delete\"\n          onClick={() => handleClickDelete()}\n        />\n      )}\n    </li>\n  );\n}\n\nexport default Todo;\n","import {\n  Button,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"./Card.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Todo from \"../ToDo/Todo\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nfunction Card({ info, index, deleteCard }) {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todoList, setTodoList] = useState(info.items || []);\n\n  const addToDo = () => {\n    if (inputValue !== \"\") {\n      const localList = [\n        ...todoList,\n        { checked: false, title: inputValue, key: todoList.length },\n      ];\n      setTodoList(localList);\n      setInputValue(\"\");\n      exportDataToStorage(localList);\n    }\n  };\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && inputValue !== \"\") {\n      const localList = [\n        ...todoList,\n        { checked: false, title: inputValue, key: todoList.length },\n      ];\n      setTodoList(localList);\n      setInputValue(\"\");\n      exportDataToStorage(localList);\n    }\n  };\n  const handleStatusChange = (todo, i) => {\n    let list = todoList;\n    list[i] = todo;\n    setTodoList([...list]);\n    exportDataToStorage(list);\n  };\n  const handleDelete = (index) => {\n    const list = todoList.filter((_, i) => i !== index);\n    setTodoList(list);\n    exportDataToStorage(list);\n  };\n  const handleDeleteAll = () => {\n    setTodoList([]);\n    exportDataToStorage([]);\n  };\n\n  const exportDataToStorage = (data) => {\n    const jsonStorage = JSON.parse(localStorage.getItem(\"cards\"));\n    jsonStorage[index].items = data;\n    localStorage.setItem(\"cards\", JSON.stringify(jsonStorage));\n  };\n\n  const handleEdit = (newInfo, index) => {\n    const list = todoList.map((item, i) => {\n      return i === index ? newInfo : item;\n    });\n    setTodoList(list);\n    exportDataToStorage(list);\n  };\n\n  return (\n    <div className=\"card\">\n      <HighlightOffIcon\n        className=\"card__deleteCard\"\n        onClick={() => deleteCard(index)}\n      />\n      <div className=\"card__image\">\n        <div className=\"card__title\">\n          <h3>{info.cardTitle}</h3>\n        </div>\n      </div>\n      <div className=\"card__form\">\n        <FormControl className=\"form__input\">\n          <InputLabel>Add Item...</InputLabel>\n          <Input\n            autoComplete=\"off\"\n            autoFocus\n            inputProps={{ maxLength: 20 }}\n            onChange={(e) => {\n              setInputValue(e.target.value);\n            }}\n            value={inputValue}\n            onKeyDown={(e) => handleKeyDown(e)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton onClick={() => addToDo()}>\n                  {inputValue !== \"\" && <AddIcon className=\"icon__valid\" />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n        <ul className=\"todoList\">\n          {todoList.map((todo, i) => {\n            return (\n              <Todo\n                todo={todo}\n                key={todo.key}\n                index={i}\n                setList={handleStatusChange}\n                deleteOnList={handleDelete}\n                edit={handleEdit}\n              />\n            );\n          })}\n        </ul>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className=\"card__deleteAll\"\n          startIcon={<DeleteIcon />}\n          onClick={() => handleDeleteAll()}\n        >\n          Delete All\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/Card/Card\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nfunction App() {\n  const [open, setopen] = useState(false);\n  const [listName, setListName] = useState(\"\");\n  const [cardList, setCardList] = useState([]);\n  const handleClose = () => {\n    setopen(false);\n  };\n  const createNewList = () => {\n    const localCard = [...cardList, { cardTitle: listName, items: [] }];\n    setCardList(localCard);\n    localStorage.setItem(\"cards\", JSON.stringify(localCard));\n    setListName(\"\");\n    handleClose();\n  };\n  const deleteAllCards = () => {\n    setCardList([]);\n    localStorage.setItem(\"cards\", JSON.stringify([]));\n  };\n\n  useEffect(() => {\n    const cards = JSON.parse(localStorage.getItem(\"cards\"));\n    if (cards) setCardList(cards);\n  }, []);\n  const deleteCard = (index) => {\n    const list = cardList.filter((_, i) => i !== index);\n    setCardList(list);\n    localStorage.setItem(\"cards\", JSON.stringify(list));\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__buttons\">\n        <Button\n          className=\"app__button\"\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<AddCircleOutlineIcon />}\n          onClick={() => setopen(true)}\n        >\n          New List\n        </Button>\n        {cardList.length > 0 && (\n          <Button\n            className=\"app__button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            startIcon={<DeleteForeverIcon />}\n            onClick={() => deleteAllCards()}\n          >\n            Delete All\n          </Button>\n        )}\n      </div>\n\n      {cardList.map((card, i) => (\n        <Card info={card} key={i} index={i} deleteCard={deleteCard} />\n      ))}\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create New List</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Type the name of your new To Do List\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"List name...\"\n            type=\"text\"\n            fullWidth\n            autoComplete=\"off\"\n            inputProps={{ maxLength: 10 }}\n            onChange={(e) => setListName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            disabled={listName !== \"\" ? false : true}\n            onClick={() => (listName !== \"\" ? createNewList() : handleClose())}\n            color=\"primary\"\n          >\n            Create!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}